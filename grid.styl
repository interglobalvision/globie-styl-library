// GRID

.container
  margin: 0 auto

.grid-row
  display: flex
  flex-direction: row
  flex-wrap: wrap
  &.reverse
    flex-direction: row-reverse
  &.flex-nowrap
    flex-wrap: nowrap

.grid-column
  display: flex
  flex-direction: column
  &.reverse
    flex-direction: column-reverse
  &.flex-nowrap
    flex-wrap: nowrap

.grid-item
  position: relative
  flex: 0 1 auto
  max-width: 100%
  max-height: 100%
  &.no-gutter
    padding-left: 0
    padding-right: 0

.flex-grow
  flex-grow: 1

// FLEX POSITIONING

  //ALIGN CONTENT

.align-content-start
  align-content: flex-start

.align-content-center
  align-content: center

.align-content-end
  align-content: flex-end

.align-content-between
  align-content: space-between

.align-content-around
  align-content: space-around

.align-content-stretch
  align-content: stretch

  //ALIGN ITEMS

.align-items-start
  align-items: flex-start

.align-items-center
  align-items: center

.align-items-end
  align-items: flex-end

.align-items-baseline
  align-items: baseline

.align-items-stretch
  align-items: stretch

  //ALIGN SELF

.align-self-auto
  align-self: auto

.align-self-start
  align-self: flex-start

.align-self-center
  align-self: center

.align-self-end
  align-self: flex-end

.align-self-baseline
  align-self: baseline

.align-self-stretch
  align-self: stretch

  //JUSTIFY CONTENT

.justify-start
  justify-content: flex-start

.justify-center
  justify-content: center

.justify-end
  justify-content: flex-end

.justify-between
  justify-content: space-between

.justify-around
  justify-content: space-around

// GRID

grid-maker($width = false, $gutter = false, $size = false, $cols = 12)

  if $width
    .container
      width: $width

  if $gutter
    .grid-item
      padding-left: ( $gutter / 2 )
      padding-right: ( $gutter / 2 )
    .text-columns
      column-gap: $gutter

  // COLUMN SIZES & OFFSETS

  if $gutter and $size

    for offset in 0..($cols - 1)
      .grid-row
        .offset-{$size}-{offset}
          margin-left: ( 100% / $cols ) * offset

    for col in 1..$cols
      .item-{$size}-{col}
        flex-basis: ( 100% / $cols ) * col
      .grid-row > .item-{$size}-{col}
        max-width: ( 100% / $cols ) * col
      .grid-column > .item-{$size}-{col}
        max-height: ( 100% / $cols ) * col

    .item-{$size}-auto
      flex-basis: auto
    .grid-row > .item-{$size}-auto
      max-width: none
    .grid-column > .item-{$size}-auto
      max-height: none

    for count in 1..4
      .text-columns-{$size}-{count}
        column-count: count

// MARGINS & PADDING

space-maker($micro = false, $tiny = false, $small = false, $basic = false, $mid = false, $large = false, $extra = false)
  if $micro
    .margin-top-micro
      margin-top: $micro
    .margin-bottom-micro
      margin-bottom: $micro
    .padding-top-micro
      padding-top: $micro
    .padding-bottom-micro
      padding-bottom: $micro
    .margin-left-micro
      margin-left: $micro
    .margin-right-micro
      margin-right: $micro
    .padding-left-micro
      padding-left: $micro
    .padding-right-micro
      padding-right: $micro

  if $tiny
    .margin-top-tiny
      margin-top: $tiny
    .margin-bottom-tiny
      margin-bottom: $tiny
    .padding-top-tiny
      padding-top: $tiny
    .padding-bottom-tiny
      padding-bottom: $tiny
    .margin-left-tiny
      margin-left: $tiny
    .margin-right-tiny
      margin-right: $tiny
    .padding-left-tiny
      padding-left: $tiny
    .padding-right-tiny
      padding-right: $tiny

  if $small
    .margin-top-small
      margin-top: $small
    .margin-bottom-small
      margin-bottom: $small
    .padding-top-small
      padding-top: $small
    .padding-bottom-small
      padding-bottom: $small
    .margin-left-small
      margin-left: $small
    .margin-right-small
      margin-right: $small
    .padding-left-small
      padding-left: $small
    .padding-right-small
      padding-right: $small

  if $basic
    .margin-top-basic
      margin-top: $basic
    .margin-bottom-basic
      margin-bottom: $basic
    .padding-top-basic
      padding-top: $basic
    .padding-bottom-basic
      padding-bottom: $basic
    .margin-left-basic
      margin-left: $basic
    .margin-right-basic
      margin-right: $basic
    .padding-left-basic
      padding-left: $basic
    .padding-right-basic
      padding-right: $basic

  if $mid
    .margin-top-mid
      margin-top: $mid
    .margin-bottom-mid
      margin-bottom: $mid
    .padding-top-mid
      padding-top: $mid
    .padding-bottom-mid
      padding-bottom: $mid
    .margin-left-mid
      margin-left: $mid
    .margin-right-mid
      margin-right: $mid
    .padding-left-mid
      padding-left: $mid
    .padding-right-mid
      padding-right: $mid

  if $large
    .margin-top-large
      margin-top: $large
    .margin-bottom-large
      margin-bottom: $large
    .padding-top-large
      padding-top: $large
    .padding-bottom-large
      padding-bottom: $large
    .margin-left-large
      margin-left: $large
    .margin-right-large
      margin-right: $large
    .padding-left-large
      padding-left: $large
    .padding-right-large
      padding-right: $large

  if $extra
    .margin-top-extra
      margin-top: $extra
    .margin-bottom-extra
      margin-bottom: $extra
    .padding-top-extra
      padding-top: $extra
    .padding-bottom-extra
      padding-bottom: $extra
    .margin-left-extra
      margin-left: $extra
    .margin-right-extra
      margin-right: $extra
    .padding-left-extra
      padding-left: $extra
    .padding-right-extra
      padding-right: $extra

// GRID TEST

.grid-test
  .container
    background: lightyellow
    border: yellow 2px solid
  .grid-item
    background: lightgrey
    border: grey 2px
  .grid-row
    border: red 2px solid
    background: pink
  .grid-column
    border: blue 2px solid
    background: lightblue
  .grid-item
    border-style: dashed
